<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd">

    <!--开启注解的扫描,希望处理service和dao,controller不需要spring框架去处理-->
    <context:component-scan base-package="com.wch">
        <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--//////////////////spring整合MyBaties////////////////////-->
    <!-- 配置连接池-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driverclass}"/>
        <property name="jdbcUrl" value="${jdbcurl}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--  //////////////////////配置和MyBatis的整合///////////////////////// -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--  指定mybatis,mapper文件的位置 -->
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>
    </bean>
    <!--  配置扫描器，将mybatis接口的实现加入到ioc容器中
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!-- 扫描所有dao接口的实现，加入到ioc容器中
        <property name="basePackage" value="com.wch.crud.dao"></property>
    </bean>-->
    <!-- /////////////////////另一种扫描配置/////////////////////////-->
    <mybatis-spring:scan base-package="com.wch.crud.dao"/>

    <!--/////////////////////配置一个可以执行批量的sqlSession/////////////////-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>



    <!--///////////////////////////mybatis整合完成////////////////////////////////-->
    
    <!-- 事务控制的配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--开启基于注解的事务-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    
    <!-- 开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  -->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut expression="execution(* com.wch.crud.service..*(..))" id="txPoint"/>
        <!-- 配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    
    <!--配置事务增强,事务如何切入-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 所有方法都是事务方法 -->
            <tx:method name="*"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>


</beans>